name: DevSecOps Security Pipeline - Windows Self-Hosted

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  security-scan:
    runs-on: self-hosted

    steps:

      # ======================
      # 1️⃣ CHECKOUT REPOSITORY
      # ======================
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ======================
      # 2️⃣ SETUP PYTHON ENVIRONMENT
      # ======================
      - name: Install Python Dependencies
        run: |
          py -m pip install --upgrade pip==22.0.4
          py -m pip install -r requirements.txt

      - name: Create Uploads Directory
        run: |
          if (!(Test-Path "static\uploads")) { New-Item -ItemType Directory -Path "static\uploads" }

      - name: Ensure .env File Exists
        run: |
          if (!(Test-Path ".env")) {
            Set-Content -Path ".env" -Value "DB_HOST=localhost`nDB_PORT=5432`nDB_USER=postgres`nDB_PASSWORD=postgres`nDB_NAME=vulnbank`nSECRET_KEY=supersecret"
          }

      - name: Update .env File for Localhost
        run: |
          (Get-Content .env) -replace 'DB_HOST=db','DB_HOST=localhost' | Set-Content .env

      # ======================
      # 3️⃣ INSTALL SECURITY TOOLS
      # ======================

      # Install Gitleaks
      - name: Install Gitleaks
        run: |
          Invoke-WebRequest -Uri https://github.com/gitleaks/gitleaks/releases/download/v8.18.2/gitleaks_8.18.2_windows_x64.zip -OutFile gitleaks.zip
          Expand-Archive -Path gitleaks.zip -DestinationPath .\gitleaks -Force

      # Install pip-audit & Bandit
      - name: Install pip-audit and Bandit
        run: |
          py -m pip install --upgrade pip-audit
          py -m pip install bandit

      # Install Hadolint (Dockerfile linter)
      - name: Install Hadolint
        run: |
          Invoke-WebRequest -Uri https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Windows-x86_64.exe -OutFile hadolint.exe

      # Install Nikto (web scanner)
      - name: Install Nikto
        run: |
          # Assuming Perl is installed in Windows
          Invoke-WebRequest -Uri https://cirt.net/nikto/nikto-2.1.7.tar.gz -OutFile nikto.tar.gz
          # Extraction & setup steps depend on Perl/Windows setup

      # ======================
      # 4️⃣ SECURITY SCANNING (lanjut walau ada finding)
      # ======================
      - name: Run Gitleaks
        continue-on-error: true
        run: .\gitleaks\gitleaks.exe detect --source=. --report-path=gitleaks-report.json

      - name: Run pip-audit
        continue-on-error: true
        run: py -m pip_audit -r requirements.txt -f json -o sca-report.json

      - name: Run Bandit
        continue-on-error: true
        run: py -m bandit -r . -f json -o bandit-report.json

      - name: Run Hadolint
        continue-on-error: true
        run: .\hadolint.exe Dockerfile -f json > hadolint-report.json

      - name: Run Nikto
        continue-on-error: true
        run: perl nikto.pl -h http://localhost:5000 -Format json -output nikto-report.json

      # ======================
      # 5️⃣ UPLOAD REPORTS
      # ======================
      - name: Ensure Reports Exist
        run: |
          if (!(Test-Path "gitleaks-report.json")) { '{}' | Out-File gitleaks-report.json }
          if (!(Test-Path "sca-report.json")) { '{}' | Out-File sca-report.json }
          if (!(Test-Path "bandit-report.json")) { '{}' | Out-File bandit-report.json }
          if (!(Test-Path "hadolint-report.json")) { '{}' | Out-File hadolint-report.json }
          if (!(Test-Path "nikto-report.json")) { '{}' | Out-File nikto-report.json }
          if (!(Test-Path "app.log")) { '' | Out-File app.log }

      - name: Upload Scan Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            gitleaks-report.json
            sca-report.json
            bandit-report.json
            hadolint-report.json
            nikto-report.json
            app.log
