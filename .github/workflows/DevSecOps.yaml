name: DevSecOps Security Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  security-scan:
    runs-on: self-hosted  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ======================
      # LOCAL INSTALLATION STEPS
      # ======================
      - name: Install dependencies
        run: |
          py -m pip install --upgrade pip==22.0.4
          py -m pip install -r requirements.txt

      - name: Create uploads directory (Windows safe)
        run: |
          if (!(Test-Path "static\uploads")) { New-Item -ItemType Directory -Path "static\uploads" }

      - name: Ensure .env file exists
        run: |
          if (!(Test-Path ".env")) {
            Set-Content -Path ".env" -Value "DB_HOST=localhost`nDB_PORT=5432`nDB_USER=postgres`nDB_PASSWORD=postgres`nDB_NAME=vulnbank`nSECRET_KEY=supersecret"
          }

      - name: Update .env file (Windows)
        run: |
          (Get-Content .env) -replace 'DB_HOST=db','DB_HOST=localhost' | Set-Content .env

      - name: Run Flask App in Background (Windows)
        run: |
          Start-Process -FilePath "py" -ArgumentList "app.py" -NoNewWindow
          Start-Sleep -Seconds 10

      # ======================
      # INSTALL SECURITY TOOLS
      # ======================

      - name: Install Gitleaks
        run: |
          Invoke-WebRequest -Uri https://github.com/gitleaks/gitleaks/releases/download/v8.18.2/gitleaks_8.18.2_windows_x64.zip -OutFile gitleaks.zip
          Expand-Archive -Path gitleaks.zip -DestinationPath . -Force
          $env:PATH += ";$PWD"

      - name: Install pip-audit
        run: |
          py -m pip install pip-audit

      - name: Install Bandit
        run: |
          py -m pip install bandit

      # ======================
      # SECURITY SCANNING
      # ======================

      - name: Run Gitleaks
        run: |
          .\gitleaks.exe detect --source=. --report-path=gitleaks-report.json || exit 0

      - name: Run pip-audit
        run: |
          py -m pip-audit -r requirements.txt -f json -o sca-report.json || exit 0

      - name: Run Bandit
        run: |
          bandit -r . -f json -o bandit-report.json || exit 0

      - name: Run Dockle
        run: |
          docker run --rm -v ${PWD}:/app goodwithtech/dockle:latest /app/Dockerfile || exit 0

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: "http://localhost:5000"
        continue-on-error: true

      # ======================
      # SAVE REPORTS
      # ======================
      - name: Upload scan reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            gitleaks-report.json
            sca-report.json
            bandit-report.json
            app.log
